#include "defs/Tensor.h"

typedef void (*ADD_POINTER)(void *, void *, void *);

struct ADD_FUNCTION
{
    NumProps a;
    NumProps b;
    NumProps c;
    ADD_POINTER pointer;
};

void add_@TYPE1@_from_@TYPE2@_and_@TYPE3@(void *a, void *b, void *c)
{
    *((@TYPE1@ *)c) = *((@TYPE2@ *)a) + *((@TYPE3@ *)b);
}

ADD_FUNCTION TABLE[] =
{
    {@TYPE1@, @TYPE2@, @TYPE3@, add_@TYPE1@_from_@TYPE2@_and_@TYPE3@},
};

Tensor *add(Tensor *a, Tensor *b)
{
    Tensor *c = new Tensor(getSafeType(a->props, b->props));
    for (const auto entry : TABLE)
    {
        entry.pointer(a->a, b->a, c->a);
    }
    return c;
}